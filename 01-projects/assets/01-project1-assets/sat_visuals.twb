<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0511.2203                                -->
<workbook source-build='9.3.1 (9300.16.0511.2203)' source-platform='mac' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='sat_scores (2)' inline='true' name='textscan.0jfzccg0fw3ldj16a8xzy1d0k7xk' version='9.3'>
      <connection class='textscan' directory='/Users/michaelmainzer/Documents/GA/DSI/mike1/02-projects/01-projects-weekly/project-01/assets' filename='sat_scores.csv' password='' server=''>
        <relation name='sat_scores.csv' table='[sat_scores#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Rate' ordinal='1' />
            <column datatype='integer' name='Verbal' ordinal='2' />
            <column datatype='integer' name='Math' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rate]</local-name>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias>Rate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Verbal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Verbal]</local-name>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias>Verbal</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Math</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Math]</local-name>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias>Math</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.425' measure-ordering='alphabetic' measure-percentage='0.575' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='sat_scores' inline='true' name='textscan.1mdokgo17e8csz1ck00yn00sfmlz' version='9.3'>
      <connection class='textscan' directory='/Users/michaelmainzer/Documents/GA/DSI/mike1/02-projects/01-projects-weekly/project-01/assets' filename='sat_scores.csv' password='' server=''>
        <relation name='sat_scores.csv' table='[sat_scores#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Rate' ordinal='1' />
            <column datatype='integer' name='Verbal' ordinal='2' />
            <column datatype='integer' name='Math' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rate]</local-name>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias>Rate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Verbal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Verbal]</local-name>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias>Verbal</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Math</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Math]</local-name>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias>Math</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.425' measure-ordering='alphabetic' measure-percentage='0.575' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Alaska'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>SAT Math Scores by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sat_scores' name='textscan.1mdokgo17e8csz1ck00yn00sfmlz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1mdokgo17e8csz1ck00yn00sfmlz'>
            <column datatype='integer' name='[Rate]' role='measure' type='quantitative' />
            <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Verbal]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rate]' derivation='Sum' name='[sum:Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Verbal]' derivation='Sum' name='[sum:Verbal:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;AK&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Rate:qk]' palette='tableau-red' type='interpolated' />
            <encoding attr='color' field='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='tableau-light-gray' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[none:State:nk]' />
              <color column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' />
              <text column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' />
              <size column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Rate:qk]' />
              <geometry column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[none:State:nk]</run>
                <run>&gt;</run>
                <run>Æ&#10;</run>
                <run>&lt;[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[Latitude (generated)]</rows>
        <cols>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Continental US'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>SAT Verbal Scores by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sat_scores' name='textscan.1mdokgo17e8csz1ck00yn00sfmlz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1mdokgo17e8csz1ck00yn00sfmlz'>
            <column datatype='integer' name='[Rate]' role='measure' type='quantitative' />
            <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Verbal]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rate]' derivation='Sum' name='[sum:Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Verbal]' derivation='Sum' name='[sum:Verbal:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;All&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ND&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[Longitude (generated)]' field-type='quantitative' max='-7272865.5238409592' min='-14086607.053235164' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[Latitude (generated)]' field-type='quantitative' max='6508809.1617281083' min='271805.12575300003' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Rate:qk]' palette='tableau-red' type='interpolated' />
            <encoding attr='color' field='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='tableau-light-gray' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[none:State:nk]' />
              <color column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' />
              <text column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' />
              <size column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Rate:qk]' />
              <geometry column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[none:State:nk]</run>
                <run>&gt;</run>
                <run>Æ&#10;</run>
                <run>&lt;[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[Latitude (generated)]</rows>
        <cols>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Hawaii'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>SAT Math Scores by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sat_scores' name='textscan.1mdokgo17e8csz1ck00yn00sfmlz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1mdokgo17e8csz1ck00yn00sfmlz'>
            <column datatype='integer' name='[Rate]' role='measure' type='quantitative' />
            <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Verbal]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rate]' derivation='Sum' name='[sum:Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Verbal]' derivation='Sum' name='[sum:Verbal:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;HI&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Rate:qk]' palette='tableau-red' type='interpolated' />
            <encoding attr='color' field='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='tableau-light-gray' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[none:State:nk]' />
              <color column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' />
              <text column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' />
              <size column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Rate:qk]' />
              <geometry column='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[none:State:nk]</run>
                <run>&gt;</run>
                <run>Æ&#10;</run>
                <run>&lt;[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[Latitude (generated)]</rows>
        <cols>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='Continental US' show-title='true' w='99600' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='29625' id='8' name='Alaska' w='33300' x='2400' y='57625' />
        <zone h='17125' id='9' name='Hawaii' w='20100' x='39400' y='64250' />
        <zone h='6250' id='6' name='Continental US' pane-specification-id='0' param='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' type='color' w='14000' x='77900' y='47000' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' name='Continental US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Rate:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Alaska'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Rate:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Hawaii'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Rate:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1mdokgo17e8csz1ck00yn00sfmlz].[sum:Verbal:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Alaska'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Continental US'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Hawaii'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Continental US' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Alaska' width='192'>
      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
      pIj1/x5rnQq3LHLHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Hawaii' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAM7UlEQVR4nO3dfXAU5QHH8d/u3uXlLi8ECGAIISS8JhEhSFRQccAOitoRnc6oUyp27Fjq
      oDJ2nMERbavT0Vbbqn2xQx2nohXFF/CtDgLhVSMG5CWBAAlEzPv73eXed/fpHwhTFCSXu3C3
      9/w+M/knl3vu+WO/2d3bveeUjo4OkZaWBiIZ2dLS0pCZmRnveRDFhRrvCRDFEwMgqTEAkhoD
      IKkxAJIaAyCpMQCSGgMgqTEAkhoDIKkxAJIaAyCpMQCSmi3eExgowzDg8/nQ1tyEzrYWdDXW
      Qw/6Map4GsZOKMYlY/ORkpICVWXTNHCK2+0WiXw7tM/rxcHqKtRs+hB9Jxtg1wPQhAHl28cF
      AF21w0zPwMiiqbjq1jtRPLUEiqL80LBEABI8gKO1B1H5ygsIt5yACjGg55ipTly7bCWmV1w1
      xLOjZJCQh0DhUAhbP3gXde+vgRYORHSioga9+Pzd11A2qwKqpg3ZHCk5JFwAblcf1r/4NDyH
      qqEN8L/+dwW/OYb6o0cweVpJjGdHySahzhhDoRDW//UZ9B/6EsogN34AsAkDbScbYzcxSloJ
      E4AQAp+++So8tbujHsuEgpwxeTGYFSW7hAlgz45KnNi4DrF470Z3ZKOoeGIMRqJklxABhEIh
      VL+/Fqqhx2S8/PK5cDidMRmLkltCBHCi/hhCbV/HZCxd0VB69XxeB6ABSYgAwqEgFGHGZKyU
      MeNRNGVaTMai5JcQARRPmQZHwZQo3vc5RQCYcMU8pKamxmJaJIGYBNDa3IR1f38O7a0tg3p+
      eno6bn/kSTinlMOM4jTYSElH6VXXDvr5JJ+oAhBC4GjNfrz7uxXo2PkxDuzaNuixhuXkYMlj
      T2P2fY9CyyuKOAQTCqbdfBfyxxUMeg4kn6juBdr3+U7sXP0HqAEvjIzhuOv3/8CIkSOjnpTf
      78eeHZXY/8FaoLv5gikIKBh3/W24eekveTcoRWRQAQghsHvLRnz56vNQw0EIAEW3/Aw33nl3
      TCfn7e/HF5s/wcGN6yFc3bCboVOTPj0PALpmx7i5N+Cme5bx2J8iNqgAavdWo/L5J6CGAwAA
      kT0KP336JWRnZw/FHGGaJlpbWtDUeBwdDXUI9LuhB4NIcTgxa+GPUTihaEhel5JfxAH09vTg
      jVXLgd42AICZloGFDz+FSaWXDtUciYZMxAfMtdVVEKc3fnsa5i1byY2fLCviABqqd0EBYGo2
      VCx9CGWXXzEE0yK6OCIOwAiHYWh2lNz2c8y+7nreckCWFvEHYuw5ozDnvpWYOecabvxkeRGf
      BIfDYdjt9iGcEtHFE/EhEDd+Sia8bEpSYwAktYRbFYIGp6+3F91dnYAwUTx5arynYxkMwOK8
      Xi+2rX8TDVs/hun3QMkcjqXPvISsrKG5LSXZ8BDIokzTRO1Xe7Bm1QM48dHr0Ly9sJs6NFcH
      dn28Id7TswzuASyop6sLW976N1o/2wjN1M+6XVwBcGzTelw+fyFyR42O1xQtg3sACzEMA1WV
      m/DG48vRvvNjaOa5V9HQfC589v46CBHth0yTH/cAFiCEQGtzEzav+SdcNV9AvcACAgqAk9s/
      Qt3suZh22cyLM0mLSujVoenUf/3tH76Hgxtegy3giei56uhCLHnyeTgzMoZodtbHQ6AEV3/0
      CGrWrY544wcAo70Rm99aMwSzSh4MIMHVVW2Hep5j/QtRAJzc+gEajtTFdlJJhAEkuIDHFdV6
      qYoeRO3ng1+tI9kxgASXPTovqgXDFADNB6sRCoViNaWkwgASXNH0cphadHfghtq/Qcs3J2M0
      o+TCABLc5GmlGFZaEdUYNjOMHf9Zjd6eHnR2dqCxoZ7XCL7Ft0EtoL7uMD56agXsZjiqcUR2
      LsI+L1Rh4roHHsd0fp6bewArKJo8BaNmzIl68WDF1YmUsA82PYC9n2zgXgAMwBJUVcXCpctg
      H1MYdQSnuY/tR3NTU4xGsy4GYBHDR+bi5hVPQMmOfu1VANDCARzcuSUmY1kZA7CQvHEF+NHy
      VTDTor+1QQFwoqoSfr8/+olZGAOwmEklZZi3bCWUvInQtVSYwKAPi4yuZtQd2BfL6VkO3wWy
      qHA4jNbmJjTVH4Xf64Hf3Yf+7k74PS7oAR+C7j6EvW7Ygj5owjjvOGOuvQWL73tQ2jWeeDu0
      RdntdhQUTkBB4YSzfi+EgGEY0HUduq7j5PF6HN5ViZN7P4Pi90ATxpnbqY0UB8quWSDtxg9w
      DyCNYDCI7u4ueNweBAJ+BPrduGTceBSML4z31OKKAZDUeBJMUuM5AMWUrutobKhHb2c7TAGk
      pacjIysbzsxMpKU7YLPZzvz4/X4crzuEguJJGJaTE5dzEQZAMbVnx1ZUvfwsbN/et2RChamo
      EJoNBgDVngq7IxOpGZkIunqAvg4YjmyMmV6BkqsXIL+wCFnZ2dA07aLMl+cAFDPhcBgvP7oc
      ZvOxiJ8rAJiKBpGeCS1zGLJGj8WwvHEYkV+I0lkVQ/b9cwyAYubQwQPY/PTD0C6wasVAnb7A
      pzuGYcbiJZh3060xGff/8SSYYqZ40mSkTSiBocRms1K+/bH7+tB6pDYmY37vNbgHoFjyer2o
      P1yLxgN70HJoH/q72qGZOmxGCJowIv58swkFjuIyLH5oFXJGjIj5fBkADQkhxJmr0m63Cz1d
      XfC43fB0d8DT0Qa/pw+u9lb4eruAcADC7wWEgJKaBtjToNhTMGZyKSZVXIuS6ZchZYi+BJ0B
      UFwJIeDz+eB2uSCECYczAw6HAykpKRfl9fk2KMWVoihwOp1wOp1xeX2eBJOlCSHgcvWhautm
      uF2uiJ/PPQBZlmEY2LphHWo+eQe2/h58lZuPq5f8CmWzKgZ8VZnnAGRJQgjs3rIRX77yp7OW
      jjQ0O/KvWYQFd9w9oG/J4SEQWZKu69j93mvfWzdVM8Jo2boBrz+2HAeqv4Bp/vBFOQZAltTY
      UA/R237OxxQAoqsZ2/7yONavfgEdba3wer3njIHnABQXvT092LHhLRSXX4nJJaURfwF7IBC4
      4BeFaKaO1m0fYO3nW6BlZENzZCA1MxvZo/OQWzAB40um8xyALj7DMLD2T0+i76sdMFUNWu44
      TJyzAOXXXY+RuaMGNEZXZyfWPLwUqXpgUHMQAAxbKg+BKD683R1QAGimAbQ34th7L+OtJx5E
      zZ4vB7RiXc7w4RhWXDLo11cA2PQgA6CLT1VVTJg196zlXBQA6OvA1hd/g92Vn15wDE3TsOgX
      KyCyolsojAHQRacoCuYsuhVK7rjvPaaGAtj95r/Q19t7wXFG5+Xh+vtXwnQO/LMCLn8QIV3H
      0VYXdMEAKE6cTicqfnLPOW+dVj3d2LNt04DGmXLpDCxe9WfYx04c0AJhfT4/9jd1oqG9HyYY
      AMXRzCvnInNK+TkeUZCVO/Av+R5bMB53rPojJt9+L8TIfJg/cNP1cKcDM/JzUZKXBQ28Ekxx
      1t7chPeffwqhplMfozRVG3Kmz8Hi+389qBvk/H4/9lXtQs1/30ao6dhZKQgh0NTTDwETNlWF
      32AAlAD6+/uxd0clDENH7tgClM4oj3qFCL/Ph7ef+y3ch6vPRNDV50F1Wz8yUk2oQgFUOwOg
      5NXW2oK1j9yLFCMIADBME939QfgCASiaBp9u8EowJa9Ro8cgq7gUgaN7AQCaqmJUVjqQlX7m
      b3gSTElLVVVMmTv/B0+KGQAltanls2E6ss77OAOgpDZ8+AiMnDrzvNcIGAAlNUVRMH3+DRDa
      uT9kzwAo6ZWVz8aMu5ZBP8dVZ74NSpYnhEBd7UG0nvwa8xfdct6/qflqD45UbUfn8SNIz85B
      akYW3wYl6/J5vTi69wvU7qpEd81u5F9943n/VlEUXFp+Ocpmzjrr9wyALMk0Tbzzt2fh3rf9
      1BqiqQ7MXLDogs/77hVmBkCW1O/xoK+7E2JEPsaWlWPqFdegcOKkiMfhOQBZ0ulPjQkhoCjK
      oO8d4h6ALOn0Bh/tTXN8G5SkxgBIagyApMYASGoMgKTGAEhqDICkxgBIagyApMYASGoMgKTG
      AEhqDICkxgBIagyApMYASGoMgKTGAEhqDICkxgBIagyApMYASGoMgKTGAEhqDICkxgBIagyA
      pMYASGoMgKTGAEhqDICkxgBIagyApMYASGoMgKTGAEhqDICkxgBIagyApMYASGoMgKTGAEhq
      DICkxgBIagyApMYASGoMgKTGAEhqDICkxgBIagyApMYASGoMgKTGAEhqDICkxgBIagyApMYA
      SGoMgKTGAEhqDICkxgBIagyApMYASGoMgKTGAEhqDICkxgBIagyApMYASGoMgKTGAEhqDICk
      xgBIagyApMYASGoMgKTGAEhqDICkxgBIagyApMYASGoMgKTGAEhqDICkxgBIagyApMYASGoM
      gKTGAEhqtkAgAEVR4j0Porj4H+nRXxKUJsx4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      BcHOIvM7t4sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
